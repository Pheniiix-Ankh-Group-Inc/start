name: Deploy to S3

on:
  workflow_run:
    workflows: ["Semantic Release"] # Nom exact du workflow de release
    types:
      - completed

jobs:
  deploy:
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    name: Deploy Frontend to S3
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read

    defaults:
      run:
        working-directory: client

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 # Important pour avoir acc√®s aux tags

      - name: Configure AWS credentials via OIDC
        uses: aws-actions/configure-aws-credentials@v2
        with:
          role-to-assume: ${{ secrets.GH_ACTIONS_AWS_ROLE }}
          aws-region: ca-central-1

      - name: Install dependencies
        run: npm ci
        env:
          HUSKY: 0

      - name: Build the frontend
        run: npm run build

      - name: Sync all files to S3
        run: aws s3 sync dist/ s3://anhk --delete

      - name: Fix MIME types for JS files
        run: |
          find dist/assets -type f -name "*.js" -exec bash -c 'aws s3 cp "$0" s3://anhk/assets/$(basename "$0") --content-type application/javascript' {} \;

      - name: Fix MIME types for CSS files
        run: |
          find dist/assets -type f -name "*.css" -exec bash -c 'aws s3 cp "$0" s3://anhk/assets/$(basename "$0") --content-type text/css' {} \;

      - name: Fix MIME type for index.html
        run: aws s3 cp dist/index.html s3://anhk/index.html --content-type text/html

      - name: Invalidate CloudFront cache
        run: |
          echo "Triggering CloudFront invalidation for /*"
          aws cloudfront create-invalidation \
            --distribution-id ${{ secrets.CLOUDFRONT_DISTRIBUTION_ID }} \
            --paths '/*'
        env:
          AWS_REGION: ca-central-1